#!/bin/bash -ex
# Copyright 2012 NEC Corporation.
# All Rights Reserved.
#

[ -z ${PROJECT} ] && echo "Error: no PROJECT!" && exit 1
[ -z ${BRIDGE} ] && echo "Error: no BRIDGE!" && exit 1
[ -z ${TREMA_DIR} ] && echo "Error: no TREMA_DIR!" && exit 1
[ -z ${QUANTUM_DIR} ] && echo "Error: no QUANTUM_DIR!" && exit 1
nova_manage="sudo nova-manage --flagfile=/etc/nova/nova.conf"


$nova_manage db sync

# create network   net: (<label> <cidr> <size> <gw>)
for str in "('public' '192.168.123.0/24' 256 '192.168.123.1')" \
		   "('private' '192.168.124.0/24' 256 '192.168.124.1')"
do
	eval net=$str

	# create network
	$nova_manage network create --project=$PROJECT \
		--label "${net[0]}" --fixed_range_v4=${net[1]} \
		--network_size=${net[2]} --num_networks=1
	net_id=$($nova_manage network quantum_list | \
			grep ${net[1]} | awk '{print $1}')

	# make veth
	sudo ip link add type veth
	id=$(ip link | tail -2 | grep "^[0-9].*veth[0-9]" | \
		 gawk '{print $2}' | sed -e "s/://" -e "s/veth//")
	mac=$(ip link | tail -1 | gawk '{print $2}')
	if [ "x$id" = "x1" ]
	then
		etha="veth0"
	else
		etha="veth$(expr $id - 1)"
	fi
	ethb="veth$id"

	# connect to host machine
	sudo ifconfig $etha ${net[3]}
	sudo ip link set $ethb up

	# connect to Open vSwitch
	sudo ovs-vsctl add-port br-int $ethb

	# plug port to the slice
	eval dpid'='$(sudo ovs-vsctl get bridge $BRIDGE datapath_id)
	portn=$(sudo ovs-vsctl get Interface $ethb ofport)
	iface=$(echo $net_id | sed -e "s/....$/0001/")
	ret=$($QUANTUM_DIR/bin/cli create_port $PROJECT $net_id \
		| grep "Port with ID")
	port_id=${ret##* }
	$QUANTUM_DIR/bin/cli set_port_state $PROJECT $net_id $port_id ACTIVE

	# register vifinfo
	cat << END > $iface.json
{ "vifinfo": {"interface_id": "$iface", "ofs_port": {"datapath_id": "0x$dpid", "port_no": $portn}}}
END
	httpclient="$TREMA_DIR/apps/sliceable_routing_switch/test/rest_if/httpc"
	$httpclient POST http://127.0.0.1:9696/v1.0/vifinfos $iface.json
	$QUANTUM_DIR/bin/cli plug_iface $PROJECT $net_id $port_id $iface
done	
